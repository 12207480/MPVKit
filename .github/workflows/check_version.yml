name: Check new version

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Checkout ffmpeg
        uses: actions/checkout@v4
        with:
          repository: "FFmpeg/FFmpeg"
          path: 'ffmpeg'
          ref: 'release/7.0'
          fetch-depth: 0

      - name: Checkout mpv
        uses: actions/checkout@v4
        with:
          repository: "mpv-player/mpv"
          path: 'mpv'
          fetch-depth: 0

      - name: Get latest verion
        id: version
        run: |
          cd ./ffmpeg
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "ffmpeg latest tag: $latest_tag"
          echo "::set-output name=ffmpeg::$latest_tag"
          cd ..

          cd ./mpv
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "mpv latest tag: $latest_tag"
          echo "::set-output name=mpv::$latest_tag"
          cd ..

          rm -rf ./ffmpeg
          rm -rf ./mpv

      - name: update to new version
        uses: jannekem/run-python-script-action@v1
        with:
          fail-on-error: false
          script: |
            import re
            file_path = './Sources/BuildScripts/XCFrameworkBuild/main.swift'
            with open(file_path, 'r', encoding='utf-8') as file:
              content = file.read()
            content = re.sub(r'(case .libmpv[^"]+?)"(.+?)"', r'\1"${{ steps.version.outputs.mpv }}"', content, count=1)
            content = re.sub(r'(case .FFmpeg[^"]+?)"(.+?)"', r'\1"${{ steps.version.outputs.ffmpeg }}"', content, count=1)
            with open(file_path, 'w', encoding='utf-8') as file:
              file.write(content)

            file_path = './README.md'
            with open(file_path, 'r', encoding='utf-8') as file:
              content = file.read()
            content = re.sub(r'mpv-.*-blue', r'mpv-${{ steps.version.outputs.mpv }}-blue', content, count=1)
            content = re.sub(r'ffmpeg-.*-blue', r'ffmpeg-${{ steps.version.outputs.ffmpeg }}-blue', content, count=1)
            with open(file_path, 'w', encoding='utf-8') as file:
              file.write(content)


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          add-paths: |
            ./Sources/BuildScripts/XCFrameworkBuild/main.swift
            ./README.md